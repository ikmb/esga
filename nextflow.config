/*
 * -------------------------------------------------
 *  genome-annotation Nextflow config file
 * -------------------------------------------------
 * Default config options for all environments.
 * Cluster-specific config options should be saved
 * in the conf folder and imported under a profile
 * name here.
 */

process.container = "docker://ikmb/esga:1.1"

/**********************
   Default parameters
 ***********************/

params { 
	proteins = false
	transcripts = false
	reads = false

	trinity = false
	pasa = false
	evm = false
	evm_weights = "$baseDir/assets/evm/weights.txt"

	aug_species = false
        aug_config = "$baseDir/assets/augustus/augustus_default.cfg"

	rm_species = false
	rm_lib = false

	aug_training = false
	aug_training_models = 1000
	aug_train_perc = 90
	aug_train_set = false
	aug_options = ""
	
	fast = false

	uniprot = ""

	chunk_size = 50000

	nblast = 400
	nexonerate = 300
	nexonerate_exhaustive = 50
	nevm = 10
	max_intron_size = 20000
	npart_size = 200000000
	min_contig_size = 5000
	min_prot_length = 30

	blast_options = "6 qseqid sseqid sstart send slen pident qlen qstart qend length mismatch gapopen evalue bitscore"

	blast_evalue = 0.000001
	blast_bitscore = 25
	blast_pident = 70
	blast_length_percent = 0.65

	tblastn = "/opt/blast/2.2.31/bin/tblastn"
	makeblastdb = "/opt/blast/2.2.31/bin/makeblastdb"

	singleEnd = false
	rnaseq_stranded = false
	
	outdir = "results"

	name = false
	help = false
	email = false
	plaintext_email = false

	run_name = "esga-annotation"

	pasa_mysql_user = false
	pasa_mysql_pass = false
	pasa_mysql_host = "localhost"
	pasa_mysql_port = 3306
	pasa_config = "${baseDir}/assets/pasa/alignAssembly.config"

	pri_prot = 5
	pri_est = 3
	pri_rnaseq = 4
	
	t_est = "E"
	t_prot = "P"
	t_rnaseq = "E"

}

/***************
   Profiles 
 ***************/
 
profiles {
	standard {
		includeConfig 'conf/ccga_medcluster.config'
		includeConfig 'conf/base.config'
	}
	nbis {
		includeConfig 'conf/nbis_slurm.config'
		includeConfig 'conf/base.config'
	}
	local {
		includeConfig 'conf/base.config'
	}
	none {
		// Don't load any config (for use with custom home configs)
	}
}


/***********************
    Pipeline Info
 **********************/
 
// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

timeline {
	enabled = true
	file = "${params.outdir}/pipeline_info/genome-annotation_timeline.html"
}
report {
	enabled = true
	file = "${params.outdir}/pipeline_info/genome-annotation_report.html"
}
trace {
	enabled = true
	file = "${params.outdir}/pipeline_info/genome-annotation_trace.txt"
}
dag {
	enabled = true
	file = "${params.outdir}/pipeline_info/genome-annotation_dag.svg"
}

manifest {
	homePage = 'https://github.com/ikmb/esga.git'
	description = 'This pipeline annotates an eukaryotic genome de novo with external hints.'
	mainScript = 'main.nf'
	version = '1.0'
	nextflowVersion = '20.01.0'
}

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
  if(type == 'memory'){
    try {
      if(obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
      return obj
    }
  } else if(type == 'time'){
    try {
      if(obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
      return obj
    }
  } else if(type == 'cpus'){
    try {
      return Math.min( obj, params.max_cpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
      return obj
    }
  }
}

params {
  // Defaults only, expecting to be overwritten
  max_memory = 120.GB
  max_cpus = 16
  max_time = 120.h
}

